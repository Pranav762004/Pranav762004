#include<iostream>
#include<stdlib.h>
using namespace std;
#define size 5
class dequeue
{
    int a[10];
    int front;
    int rear;
    int count;
public:
    dequeue();
    void add_at_begin(int);
    void add_at_end(int);
    void del_at_front();
    void del_at_rear();
    void display();
};
dequeue::dequeue()
{
    front = -1;
    rear = -1;
    count = 0;
}
void dequeue::add_at_begin(int item)
{
    int i;
    if(front==-1)
    {
        front++;
        rear++;
        a[rear]=item;
        count++;
    }
    else if(rear>=size-1)
    {
        cout<<"\n INSERTION NOT POSSIBLE DUE TO OVERFLOW"<<endl;
    }
    else
    {
        for(i=count;i>=0;i--)
        {
            a[i] = a[i-1];
        }
            a[i]=item;
            count++;
            rear++;
    }
}

void dequeue::add_at_end(int item)
{
    if(front==-1)
    {
    front++;
    rear++;
    a[rear]= item;
    count++;
    }
    else if(rear>=size-1)
    {
        cout<<"\n INSERTION NOT POSSIBLE DUE TO OVERFLOW"<<endl;
    return;
    }
    else
    {
    a[++rear]=item;
    }
}

void dequeue::display()
{
    for(int i=front;i<=rear;i++)
    {
        cout<<a[i]<<" ";
    }
}

void dequeue::del_at_front()
{
    if(front==-1)
    {
        cout<<"\n CANNOT DELETE.THE QUEUE IS EMPTY"<<endl;
        return;
    }
    else
    {
        if(front==rear)
    {
        front=rear=-1;
    return;
    }
        cout<<"DELETED ELEMENT IS :"<<a[front]<<endl;
        front = front+1;
    }
}

void dequeue::del_at_rear()
{
    if(front==-1)
    {
        cout<<"\n CANNOT DELETE.THE QUEUE IS EMPTY"<<endl;
        return;
    }
    else
    {
    if(front==rear)
        {
            front=rear=-1;
            return;
        }
        cout<<"\n DELETED ELEMENT IS : "<<a[rear]<<endl;
        rear = rear-1;
    }
}

int main()
{
    int item;
    dequeue d1;
    int ch;
    do
        {
            cout<<"\n------OPERATIONS ON DEQUEUE------"<<endl;
            cout<<"1.INSERT AT BEGINNING"<<endl;
            cout<<"2.INSERT AT END"<<endl;
            cout<<"3. DISPLAY "<<endl;
            cout<<"4.DELETE AT FRONT"<<endl;
            cout<<"5.DELETE AT REAR"<<endl;
            cout<<"6. EXIT"<<endl;
            cout<<"ENTER YOUR CHOICE : ";
            cin>>ch;
            switch(ch)
                {
                case 1:
                cout<<"ENTER ELEMENT TO BE INSERTED : ";
                cin>>item;
                d1.add_at_begin(item);
                break;
                case 2:
                cout<<"ENTER ELEMENT TO INSERT AT END : ";
                cin>>item;
                d1.add_at_end(item);
                break;
                case 3:
                d1.display();
                break;
                case 4:
                d1.del_at_front();
                break;
                case 5:
                d1.del_at_rear();
                break;
                case 6:
                cout<<"THE END"<<endl;
                break;
                default:
                cout<<"INVALID CHOICE"<<endl;
                }
        }
            while(ch!=7);
            return 0;
}
